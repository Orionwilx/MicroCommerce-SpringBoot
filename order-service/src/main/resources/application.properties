spring.application.name=order-service
application.title=Order Service
application.version=v1.0.0

server.port=8080

# Database
spring.datasource.url=jdbc:postgresql://localhost:5432/orderdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging
logging.level.org.springframework=INFO
logging.level.com.example=DEBUG

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Eureka instance configuration
eureka.instance.lease.expiration=90


#ACTUATOR
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true


#CIRCUIT BREAKER RESILENT4J PROPERTIES

resilience4j.circuitbreaker.configs.default.register-health-indicator= true
#Cuenta el numero de peticiones que llegan al api gateway
resilience4j.circuitbreaker.configs.default.slidingWindowType=count_based
#Cada 10 peticiones analiza si debe mantener cerrado o debe abrir el circuit breaker
resilience4j.circuitbreaker.configs.default.slidingWindowSize= 10
# si el 20% de las peticiones falla se abre el circuit breaker, 20% de 10 es 2
resilience4j.circuitbreaker.configs.default.failureRateThreshold= 20
# el circuit breaker permacera abierto 5 degundos donde no aceptara peticiones, para luego de ese tiempo entra en el estado half-open
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState= 3s
# si en el estado half-open recibe 3 peticiones seguidas y no fallan pasa al estado close de lo contrario vuelve a open
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState= 3
#automaticamente pasara de half-open a open o de half-open a close
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled= true


resilience4j.circuitbreaker.configs.createOrderToInvetory.register-health-indicator= true
resilience4j.circuitbreaker.configs.createOrderToInvetory.slidingWindowType=count_based
resilience4j.circuitbreaker.configs.createOrderToInvetory.slidingWindowSize= 20
resilience4j.circuitbreaker.configs.createOrderToInvetory.failureRateThreshold= 50
resilience4j.circuitbreaker.configs.createOrderToInvetory.waitDurationInOpenState= 5s
resilience4j.circuitbreaker.configs.createOrderToInvetory.permittedNumberOfCallsInHalfOpenState= 5
resilience4j.circuitbreaker.configs.createOrderToInvetory.automaticTransitionFromOpenToHalfOpenEnabled= true

